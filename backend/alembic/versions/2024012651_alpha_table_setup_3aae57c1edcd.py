"""Alpha table setup

Revision ID: 3aae57c1edcd
Revises: 
Create Date: 2024-01-26 23:51:11.398537

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "3aae57c1edcd"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organizations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("force_password_reset_on_login", sa.Boolean(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("org_username", sa.String(length=32), nullable=False),
        sa.Column("org_name", sa.String(length=64), nullable=False),
        sa.Column("primary_contact_email", sa.String(length=254), nullable=False),
        sa.Column("hashed_password", sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("org_name"),
        sa.UniqueConstraint("org_username"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("is_rpi_staff", sa.Boolean(), nullable=False),
        sa.Column("RCSID", sa.String(length=32), nullable=False),
        sa.Column("RIN", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("major", sa.String(length=64), nullable=True),
        sa.Column(
            "gender_identity",
            sa.Enum("OTHER", "MALE", "FEMALE", "NOTDISCLOSED", name="gendertype"),
            nullable=True,
        ),
        sa.Column(
            "pronouns",
            sa.Enum(
                "NOT_SHOWN",
                "THEY_THEM",
                "HE_HIM",
                "SHE_HER",
                "HE_THEY",
                "SHE_THEY",
                "ALL_ANY",
                "JUST_USE_MY_NAME",
                name="pronountype",
            ),
            nullable=False,
        ),
        sa.Column("hashed_password", sa.String(length=128), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("is_graduating", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("RCSID"),
        sa.UniqueConstraint("RIN"),
    )
    op.create_table(
        "semesters",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "semester_type",
            sa.Enum("FALL", "SPRING", "SUMMER", name="semestertype"),
            nullable=False,
        ),
        sa.Column("calendar_year", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "machine_types",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "machines",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["machine_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "machine_usages",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("fk_usage_semester", sa.UUID(), nullable=False),
        sa.Column("machine_id", sa.UUID(), nullable=False),
        sa.Column("is_org_usage", sa.Boolean(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("time_started", sa.DateTime(), nullable=False),
        sa.Column("time_finished", sa.DateTime(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("failed", sa.Boolean(), nullable=False),
        sa.Column("cost", sa.Float(), nullable=False),
        sa.Column("failed_by_id", sa.UUID(), nullable=True),
        sa.Column("failure_reason", sa.String(), nullable=True),
        sa.Column("failed_at", sa.DateTime(), nullable=True),
        sa.Column("cleared_by_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(["cleared_by_id"], ["users.id"], name="fk_cleared_by"),
        sa.ForeignKeyConstraint(["failed_by_id"], ["users.id"], name="fk_failed_by"),
        sa.ForeignKeyConstraint(
            ["fk_usage_semester"],
            ["semesters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["machine_id"], ["machines.id"], name="fk_usage_machine"
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"], ["organizations.id"], name="fk_usage_org"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="fk_usage_user"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "material_groups",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "materials",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("units", sa.String(length=8), nullable=False),
        sa.Column("cost", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("permissions", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("inverse_permissions", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column("display_role", sa.Boolean(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "material_groups_association_table",
        sa.Column("type_id", sa.UUID(), nullable=False),
        sa.Column("group_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["material_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["machine_types.id"],
        ),
        sa.PrimaryKeyConstraint("type_id", "group_id"),
    )
    op.create_table(
        "material_usage_quantities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("usage_id", sa.UUID(), nullable=False),
        sa.Column("is_personal_material", sa.Boolean(), nullable=False),
        sa.Column("material_id", sa.UUID(), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["material_id"], ["materials.id"], name="fk_usage_material"
        ),
        sa.ForeignKeyConstraint(
            ["usage_id"], ["machine_usages.id"], name="fk_machine_usages"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "materials_association_table",
        sa.Column("group_id", sa.UUID(), nullable=False),
        sa.Column("material_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["material_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["material_id"],
            ["materials.id"],
        ),
        sa.PrimaryKeyConstraint("group_id", "material_id"),
    )
    op.create_table(
        "roles_association_table",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("roles_association_table")
    op.drop_table("materials_association_table")
    op.drop_table("material_usage_quantities")
    op.drop_table("material_groups_association_table")
    op.drop_table("users")
    op.drop_table("semesters")
    op.drop_table("roles")
    op.drop_table("organizations")
    op.drop_table("materials")
    op.drop_table("material_groups")
    op.drop_table("machines")
    op.drop_table("machine_usages")
    op.drop_table("machine_types")
    # ### end Alembic commands ###
