"""Initial revision

Revision ID: 7b8c2113c65f
Revises: 
Create Date: 2024-08-02 01:19:50.039392

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7b8c2113c65f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('machine_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('org_name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('org_name')
    )
    op.create_table('resource_slots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('db_name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('allow_own_material', sa.Boolean(), nullable=False),
    sa.Column('allow_empty', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('db_name')
    )
    op.create_table('resources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('units', sa.String(length=16), nullable=False),
    sa.Column('cost', sa.DECIMAL(precision=5, scale=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('permissions', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('inverse_permissions', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('display_role', sa.Boolean(), nullable=False),
    sa.Column('role_icon_name', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('semesters',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('semester_type', sa.Enum('FALL', 'SPRING', 'SUMMER', name='semestertype'), nullable=False),
    sa.Column('calendar_year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_rpi_staff', sa.Boolean(), nullable=False),
    sa.Column('RCSID', sa.String(length=32), nullable=False),
    sa.Column('RIN', sa.String(length=9), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('major', sa.String(length=64), nullable=True),
    sa.Column('gender_identity', sa.Enum('NOTDISCLOSED', 'MALE', 'FEMALE', 'OTHER', name='genderstatstype'), nullable=False),
    sa.Column('pronouns', sa.Enum('NOT_SHOWN', 'THEY_THEM', 'HE_HIM', 'SHE_HER', 'HE_THEY', 'SHE_THEY', 'ALL_ANY', 'JUST_USE_MY_NAME', name='pronountype'), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.Column('is_graduating', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('RCSID'),
    sa.UniqueConstraint('RIN')
    )
    op.create_table('machines',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['machine_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('org_semester_associations',
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.Column('semester_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semesters.id'], ),
    sa.PrimaryKeyConstraint('org_id', 'semester_id')
    )
    op.create_table('resource_slot_associations',
    sa.Column('resource_slot_id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], ),
    sa.ForeignKeyConstraint(['resource_slot_id'], ['resource_slots.id'], ),
    sa.PrimaryKeyConstraint('resource_slot_id', 'resource_id')
    )
    op.create_table('state',
    sa.Column('unique_id', sa.Enum('UNIQUE', native_enum=False), nullable=False),
    sa.Column('active_semester_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['active_semester_id'], ['semesters.id'], ),
    sa.PrimaryKeyConstraint('unique_id')
    )
    op.create_table('user_org_memberships',
    sa.Column('org_role', sa.Enum('MEMBER', 'OFFICER', 'ADMIN', name='orgrole'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'org_id')
    )
    op.create_table('user_role_association',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('user_semester_associations',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('semester_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['semester_id'], ['semesters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'semester_id')
    )
    op.create_table('machine_usages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('machine_id', sa.UUID(), nullable=False),
    sa.Column('semester_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('time_started', sa.DateTime(), nullable=False),
    sa.Column('time_finished', sa.DateTime(), nullable=False),
    sa.Column('failed', sa.Boolean(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('failed_by_id', sa.UUID(), nullable=True),
    sa.Column('failure_reason', sa.String(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.Column('cleared_by_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['cleared_by_id'], ['users.id'], name='fk_cleared_by'),
    sa.ForeignKeyConstraint(['failed_by_id'], ['users.id'], name='fk_failed_by'),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], ),
    sa.ForeignKeyConstraint(['semester_id'], ['semesters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_used_by'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resource_usage_quantities',
    sa.Column('machine_usage_id', sa.UUID(), nullable=False),
    sa.Column('resource_slot_id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('is_own_material', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['machine_usage_id'], ['machine_usages.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], ),
    sa.ForeignKeyConstraint(['resource_slot_id'], ['resource_slots.id'], ),
    sa.PrimaryKeyConstraint('machine_usage_id', 'resource_slot_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resource_usage_quantities')
    op.drop_table('machine_usages')
    op.drop_table('user_semester_associations')
    op.drop_table('user_role_association')
    op.drop_table('user_org_memberships')
    op.drop_table('state')
    op.drop_table('resource_slot_associations')
    op.drop_table('org_semester_associations')
    op.drop_table('machines')
    op.drop_table('users')
    op.drop_table('semesters')
    op.drop_table('roles')
    op.drop_table('resources')
    op.drop_table('resource_slots')
    op.drop_table('organizations')
    op.drop_table('machine_types')
    # ### end Alembic commands ###
